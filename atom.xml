<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ForYou</title>
  <subtitle>如果一个人活得很诚恳，那么他一定生活在别处</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sz8023.github.io/"/>
  <updated>2016-07-26T06:41:24.000Z</updated>
  <id>http://sz8023.github.io/</id>
  
  <author>
    <name>styshy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Node.jsWeb模块</title>
    <link href="http://sz8023.github.io/2016/07/26/Node-jsWeb%E6%A8%A1%E5%9D%97/"/>
    <id>http://sz8023.github.io/2016/07/26/Node-jsWeb模块/</id>
    <published>2016-07-26T05:37:50.000Z</published>
    <updated>2016-07-26T06:41:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是Web服务器"><a href="#什么是Web服务器" class="headerlink" title="什么是Web服务器"></a>什么是Web服务器</h1><p><code>Web服务器</code>一般指的是网站服务器，是指驻留在因特网上某种类型的计算机的程序，<code>Web服务器</code>的基本功能就是提供Web信息浏览功能服务。</p>
<p><strong>Web架构</strong></p>
<p><img src="images/web_architecture.jpg" width="400px"></p>
<h3 id="使用Node创建Web服务"><a href="#使用Node创建Web服务" class="headerlink" title="使用Node创建Web服务"></a>使用Node创建Web服务</h3><p>Node.js提供了http模块，http模块主要用于搭建HTTP服务器和客户端，使用HTTP服务器或客户端功能必须调用HTTP模块。代码如下</p>
<pre><code>var http = require(&apos;http&apos;);
</code></pre><h3 id="使用Node创建Web客户端"><a href="#使用Node创建Web客户端" class="headerlink" title="使用Node创建Web客户端"></a>使用Node创建Web客户端</h3><p>Node.js创建Web客户端需要引入http模块，创建client.js文件，代码如下所示：</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是Web服务器&quot;&gt;&lt;a href=&quot;#什么是Web服务器&quot; class=&quot;headerlink&quot; title=&quot;什么是Web服务器&quot;&gt;&lt;/a&gt;什么是Web服务器&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Web服务器&lt;/code&gt;一般指的是网站服务器，是指驻留在因特网上某种类
    
    </summary>
    
      <category term="Node.js笔记" scheme="http://sz8023.github.io/categories/Node-js%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>NPM使用介绍</title>
    <link href="http://sz8023.github.io/2016/07/26/NPM%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/"/>
    <id>http://sz8023.github.io/2016/07/26/NPM使用介绍/</id>
    <published>2016-07-26T01:08:19.000Z</published>
    <updated>2016-07-26T05:38:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js-PEPL-交互式解释器"><a href="#Node-js-PEPL-交互式解释器" class="headerlink" title="Node.js PEPL(交互式解释器)"></a>Node.js PEPL(交互式解释器)</h1><p>我们可以在终端输入命令，并接收系统的响应<br>Node自带了交互式解释器，可以执行如下任务</p>
<ul>
<li>读取 - 读取用户输入，解析输入了JavaScript数据结构并存储在内存中</li>
<li>执行 - 执行输入的用户结构</li>
<li>打印 - 输出结果</li>
<li>循环 - 循环操作以上步骤知道用户两次按下ctrl+c 按钮退出</li>
</ul>
<p>我们可以输入以下命令来启动Node终端</p>
<pre><code>$ node
&gt;
</code></pre><h2 id="Node-js回调函数"><a href="#Node-js回调函数" class="headerlink" title="Node.js回调函数"></a>Node.js回调函数</h2><ul>
<li>Node.js异步编程的直接体现就是回调</li>
<li>异步编程依托于回调来实现，但不能说使用了回调后程序就异步化了。</li>
<li>回调函数在完成任务之后就会被调用，Node使用了大量的回调函数，Node所有的API都支持回调函数。</li>
</ul>
<h3 id="阻塞代码"><a href="#阻塞代码" class="headerlink" title="阻塞代码"></a>阻塞代码</h3><pre><code>var fs = require(&quot;fs&quot;);
var data = fs.readFileSync(&apos;input.txt&apos;);

console.log(data.toString());
console.log(&quot;程序执行结束&quot;);
</code></pre><h3 id="非阻塞代码"><a href="#非阻塞代码" class="headerlink" title="非阻塞代码"></a>非阻塞代码</h3><pre><code>var fs = require(&quot;fs&quot;);

fs.readFile(&apos;input.txt&apos;,function(err,data) {
    if(err) return console.error(err);
    console.log(data.toString());
});

console.log(&quot;程序执行结束&quot;);
</code></pre><p><em>第一个实例在文件读取之后才执行程序。第二个实例我们不需要等待文件读取完成，这样就可以在读取文件的同时执行接下来的代码</em></p>
<h3 id="Node-js事件循环"><a href="#Node-js事件循环" class="headerlink" title="Node.js事件循环"></a>Node.js事件循环</h3><ul>
<li>Node.js是单进程单线程应用程序，但是通过事件和回调支持并发，所以性能非常高。</li>
<li>Node.js的每一个API都是异步的，并作为一个独立线程运行，使用异步函数调用，并处理并发。</li>
<li>Node.js基本上所有的事件机制都是通过设计模式中的观察者模式实现</li>
<li>Node.js单线程类似进入一个while(true)的事件循环，直到没有事件观察者退出，每个异步事件都生成一个事件观察者，如果有事件发生就调用该回调函数。</li>
</ul>
<h3 id="随便"><a href="#随便" class="headerlink" title="随便"></a>随便</h3><pre><code>小到一个变量，数组，大到一个数据库或者网络通信，都离不开数据的增删改查。变量有，数据库也有。网络通信也有。GET,PUT,DELETE,POST
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node-js-PEPL-交互式解释器&quot;&gt;&lt;a href=&quot;#Node-js-PEPL-交互式解释器&quot; class=&quot;headerlink&quot; title=&quot;Node.js PEPL(交互式解释器)&quot;&gt;&lt;/a&gt;Node.js PEPL(交互式解释器)&lt;/h1&gt;&lt;p&gt;
    
    </summary>
    
      <category term="Node.js笔记" scheme="http://sz8023.github.io/categories/Node-js%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>node.js安装和配置</title>
    <link href="http://sz8023.github.io/2016/07/25/node-js%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://sz8023.github.io/2016/07/25/node-js安装和配置/</id>
    <published>2016-07-25T10:16:02.000Z</published>
    <updated>2016-07-25T10:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js应用有哪几部分组成"><a href="#Node-js应用有哪几部分组成" class="headerlink" title="Node.js应用有哪几部分组成"></a>Node.js应用有哪几部分组成</h1><ul>
<li>引入require模块：</li>
<li>创建服务器：服务器可以监听客户端的请求</li>
<li>接收请求与相应请求</li>
</ul>
<h2 id="创建node-js应用"><a href="#创建node-js应用" class="headerlink" title="创建node.js应用"></a>创建node.js应用</h2><ol>
<li>我们使用require</li>
</ol>
<h3 id="NPM使用介绍"><a href="#NPM使用介绍" class="headerlink" title="NPM使用介绍"></a>NPM使用介绍</h3><p>NPM(Node Package Manager)是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景如下</p>
<ul>
<li>允许用户从NPM服务器下载别人编写的第三方包到本地使用</li>
<li>允许用户从NPM服务器下载并安装别人编写好的命令行程序到本地使用</li>
<li>允许用户将自己编写好的包或命令行程序上传到NPM服务器供别人使用</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node-js应用有哪几部分组成&quot;&gt;&lt;a href=&quot;#Node-js应用有哪几部分组成&quot; class=&quot;headerlink&quot; title=&quot;Node.js应用有哪几部分组成&quot;&gt;&lt;/a&gt;Node.js应用有哪几部分组成&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;引入requir
    
    </summary>
    
      <category term="node.js笔记" scheme="http://sz8023.github.io/categories/node-js%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Node.js笔记</title>
    <link href="http://sz8023.github.io/2016/07/25/Node-js%E7%AC%94%E8%AE%B0/"/>
    <id>http://sz8023.github.io/2016/07/25/Node-js笔记/</id>
    <published>2016-07-25T09:26:39.000Z</published>
    <updated>2016-07-25T10:11:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><ul>
<li>简单的说Node.js是运行在服务器端的JavaScript</li>
<li>Node.js是一个事件驱动I/O服务器端JavaScript环境，基于Google的V8引擎，V8引擎执行JavaScript的速度非常快，性能非常快</li>
</ul>
<h2 id="使用版本"><a href="#使用版本" class="headerlink" title="使用版本"></a>使用版本</h2><p>我们可以使用一下命令来查看当前的Node版本</p>
<pre><code>node -v 
</code></pre><p>Note:不同版本可能有差异的</p>
<h3 id="脚本模式"><a href="#脚本模式" class="headerlink" title="脚本模式"></a>脚本模式</h3><pre><code>console.log(&quot;Hello, World&quot;);
</code></pre><h3 id="交互模式"><a href="#交互模式" class="headerlink" title="交互模式"></a>交互模式</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node-js&quot;&gt;&lt;a href=&quot;#Node-js&quot; class=&quot;headerlink&quot; title=&quot;Node.js&quot;&gt;&lt;/a&gt;Node.js&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;简单的说Node.js是运行在服务器端的JavaScript&lt;/li&gt;
&lt;li&gt;Node
    
    </summary>
    
      <category term="Node.js笔记" scheme="http://sz8023.github.io/categories/Node-js%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello,Hexo</title>
    <link href="http://sz8023.github.io/2016/07/25/hello-world/"/>
    <id>http://sz8023.github.io/2016/07/25/hello-world/</id>
    <published>2016-07-25T06:16:30.000Z</published>
    <updated>2016-07-25T07:43:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
      <category term="Hexo教程" scheme="http://sz8023.github.io/categories/Hexo%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo教程</title>
    <link href="http://sz8023.github.io/2016/07/22/Hexo%E6%95%99%E7%A8%8B/"/>
    <id>http://sz8023.github.io/2016/07/22/Hexo教程/</id>
    <published>2016-07-22T09:22:26.000Z</published>
    <updated>2016-07-25T07:44:57.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="我的选择"><a href="#我的选择" class="headerlink" title="我的选择"></a>我的选择</h3><blockquote>
<p>那天无聊查看了关于你的所有说说，只为了找一个共同的话题，我想我还不够努力，我想我没有真正的付出过。对于我来说只有坚定的付出，或许才能得到一段刻骨铭心的爱情！</p>
</blockquote>
<p><strong>时间</strong>从来没有辜负我们什么，只是给了我们更多的时间去思考。跟你接触了那么久，我我只在找你喜欢的东西，想找一个共同的话题。</p>
<p><strong>今天</strong>在下班的路上听见一个女生说“如果一个男生喜欢一个女生，就要快刀斩乱麻。因为女生不喜欢磨磨唧唧的男生。”我想这句话在某些情况下是有道理的。我想试试</p>
<p><strong>我</strong>不知道今天该不该行动，我想从她的口中得到一些什么，她肯定很讨厌我。可是我依然不想放弃</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;我的选择&quot;&gt;&lt;a href=&quot;#我的选择&quot; class=&quot;headerlink&quot; title=&quot;我的选择&quot;&gt;&lt;/a&gt;我的选择&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;那天无聊查看了关于你的所有说说，只为了找一个共同的话题，我想我还不够努力，我想我没有真正的付出过。
    
    </summary>
    
      <category term="ForYou" scheme="http://sz8023.github.io/categories/ForYou/"/>
    
    
  </entry>
  
</feed>
